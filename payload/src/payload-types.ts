/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    'tenant-stripe-configs': TenantStripeConfig;
    'tenant-email-configs': TenantEmailConfig;
    'global-plans': GlobalPlan;
    'tenant-plans': TenantPlan;
    tenants: Tenant;
    media: Media;
    posts: Post;
    pages: Page;
    postCategories: PostCategory;
    events: Event;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    comments: Comment;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface User {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  roles: ('super-admin' | 'user')[];
  tenants?:
    | {
        tenant: string | Tenant;
        roles: ('admin' | 'user')[];
        id?: string | null;
      }[]
    | null;
  lastLoggedInTenant?: (string | null) | Tenant;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Tenant {
  id: string;
  name: string;
  freeBloomSubdomain?: string | null;
  domains?:
    | {
        domain: string;
        id?: string | null;
      }[]
    | null;
  emailConfig?: (string | null) | TenantEmailConfig;
  stripeConfig?: (string | null) | TenantStripeConfig;
  brand_assets?: {
    logo?: string | Media | null;
    icon?: string | Media | null;
  };
  social_networks?: {
    instagram?: string | null;
    facebook?: string | null;
    youtube?: string | null;
    twitter?: string | null;
    linkedin?: string | null;
    pinterest?: string | null;
    snapchat?: string | null;
    reddit?: string | null;
    tiktok?: string | null;
    tumblr?: string | null;
  };
  financial_platforms?: {
    venmo?: string | null;
    paypal?: string | null;
    patreon?: string | null;
    cashapp?: string | null;
  };
  professional_networks?: {
    linkedin?: string | null;
    behance?: string | null;
    dribbble?: string | null;
  };
  messaging_platforms?: {
    whatsapp?: string | null;
    telegram?: string | null;
    signal?: string | null;
    wechat?: string | null;
    line?: string | null;
    discord?: string | null;
    slack?: string | null;
  };
  content_platforms?: {
    medium?: string | null;
    spotify?: string | null;
    twitch?: string | null;
    vimeo?: string | null;
    soundcloud?: string | null;
    bandcamp?: string | null;
    mixcloud?: string | null;
    flickr?: string | null;
  };
  developer_platforms?: {
    github?: string | null;
    threads?: string | null;
  };
  streetAddress?: string | null;
  city?: string | null;
  state?: string | null;
  postalCode?: string | null;
  country?: string | null;
  contactEmail?: string | null;
  telephone?: string | null;
  businessHours?: string | null;
  globalPlan: string | GlobalPlan;
  updatedAt: string;
  createdAt: string;
}
export interface TenantEmailConfig {
  id: string;
  provider?: ('resend' | 'mailgun' | 'sendgrid' | 'gmail' | 'outlook' | 'hubspot') | null;
  emailIntegrationMethod: 'smtp' | 'apiKey';
  fromEmailAddress: string;
  fromName: string;
  apiKey?: string | null;
  smtpHost?: string | null;
  smtpPort?: number | null;
  username?: string | null;
  password?: string | null;
  secure?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
export interface TenantStripeConfig {
  id: string;
  tenant: string | Tenant;
  stripeKeys: {
    stripeSecretKey: string;
    stripePublishableKey: string;
  };
  additionalStripeSettings?: {
    stripeAccountId?: string | null;
    stripeWebhookSecret?: string | null;
  };
  paymentSettings?: {
    defaultCurrency?: string | null;
    paymentMethods?:
      | {
          method: string;
          id?: string | null;
        }[]
      | null;
  };
  redirectUrls?: {
    successUrl?: string | null;
    cancelUrl?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: string;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
export interface GlobalPlan {
  id: string;
  planGroup: {
    globalPlan: 'free' | 'mini' | 'pro' | 'enterprise';
  };
  paymentGroup: {
    paymentMethod: string;
  };
  updatedAt: string;
  createdAt: string;
}
export interface TenantPlan {
  id: string;
  tenant?: (string | null) | Tenant;
  updatedAt: string;
  createdAt: string;
}
export interface Post {
  id: string;
  title: string;
  content: {
    [k: string]: unknown;
  }[];
  image: string | Media;
  category?: (string | null) | PostCategory;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface PostCategory {
  id: string;
  name: string;
  description?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Page {
  id: string;
  title: string;
  layout: {
    form: string | Form;
    enableIntro?: boolean | null;
    introContent?:
      | {
          [k: string]: unknown;
        }[]
      | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'formBlock';
  }[];
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            message?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            basePrice?: number | null;
            priceConditions?:
              | {
                  fieldToUse?: string | null;
                  condition?: ('hasValue' | 'equals' | 'notEquals') | null;
                  valueForCondition?: string | null;
                  operator?: ('add' | 'subtract' | 'multiply' | 'divide') | null;
                  valueType?: ('static' | 'valueOfField') | null;
                  valueForOperator?: string | null;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'payment';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  redirect?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null)
      | ({
          relationTo: 'events';
          value: string | Event;
        } | null);
    url?: string | null;
  };
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        message?:
          | {
              [k: string]: unknown;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  customField?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Event {
  id: string;
  title: string;
  description?: string | null;
  date: string;
  image: string | Media;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: string | Media | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  payment?: {
    field?: string | null;
    status?: string | null;
    amount?: number | null;
    paymentProcessor?: string | null;
    creditCard?: {
      token?: string | null;
      brand?: string | null;
      number?: string | null;
    };
  };
  updatedAt: string;
  createdAt: string;
}
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc:
    | {
        relationTo: 'posts';
        value: string | Post;
      }
    | {
        relationTo: 'postCategories';
        value: string | PostCategory;
      }
    | {
        relationTo: 'events';
        value: string | Event;
      };
  updatedAt: string;
  createdAt: string;
}
export interface Comment {
  id: string;
  author?: string | null;
  email?: string | null;
  content?: string | null;
  replyPost?: (string | null) | Post;
  replyComment?: (string | null) | Comment;
  isApproved?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}